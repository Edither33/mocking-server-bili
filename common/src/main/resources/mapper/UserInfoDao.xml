<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bilibili.dao.UserInfoDao">

    <resultMap type="bilibili.entity.UserInfo" id="TUserInfoMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="userId" jdbcType="INTEGER"/>
        <result property="nick" column="nick" jdbcType="VARCHAR"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="sign" column="sign" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="birth" column="birth" jdbcType="VARCHAR"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TUserInfoMap">
        select
          id, userId, nick, avatar, sign, gender, birth, createTime, updateTime
        from mock_bilibili.t_user_info
        where id = #{id}
    </select>

    <select id="queryByUserId" resultMap="TUserInfoMap">
        select
          id, userId, nick, avatar, sign, gender, birth, createTime, updateTime
        from mock_bilibili.t_user_info
        where userId = #{userId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TUserInfoMap">
        select
          id, userId, nick, avatar, sign, gender, birth, createTime, updateTime
        from mock_bilibili.t_user_info
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TUserInfoMap">
        select
          id, userId, nick, avatar, sign, gender, birth, createTime, updateTime
        from mock_bilibili.t_user_info
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userid != null">
                and userId = #{userid}
            </if>
            <if test="nick != null and nick != ''">
                and nick = #{nick}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="sign != null and sign != ''">
                and sign = #{sign}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
            <if test="birth != null and birth != ''">
                and birth = #{birth}
            </if>
            <if test="createtime != null">
                and createTime = #{createtime}
            </if>
            <if test="updatetime != null">
                and updateTime = #{updatetime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into mock_bilibili.t_user_info(userId, nick, avatar, sign, gender, birth, createTime, updateTime)
        values (#{userid}, #{nick}, #{avatar}, #{sign}, #{gender}, #{birth}, #{createtime}, #{updatetime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update mock_bilibili.t_user_info
        <set>
            <if test="nick != null and nick != ''">
                nick = #{nick},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="sign != null and sign != ''">
                sign = #{sign},
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender},
            </if>
            <if test="birth != null and birth != ''">
                birth = #{birth},
            </if>
            <if test="createtime != null">
                createTime = #{createtime},
            </if>
            <if test="updatetime != null">
                updateTime = #{updatetime},
            </if>
        </set>
        where userId = #{userid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from mock_bilibili.t_user_info where id = #{id}
    </delete>

    <!--根据用户列表获取用户信息-->
    <select id="getUserInfoByIds" resultMap="TUserInfoMap">
        select
          id, userId, nick, avatar, sign, gender, birth, createTime, updateTime
        from mock_bilibili.t_user_info
        where userId in
        <foreach collection="userList" index="index" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="pageCountTotal" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from t_user_info
        <where>
            <if test="nick == null and nick ==''">
                and nick like concat('%',#{nick},'%')
            </if>
        </where>
    </select>

    <select id="pageUserInfoList" resultMap="TUserInfoMap" parameterType="java.util.Map">
        select id, userId, nick, avatar, sign, gender, birth, createTime, updateTime
        from t_user_info
        <where>
            <if test="nick == null and nick ==''">
                and nick like concat('%',#{nick},'%')
            </if>
        </where>
        order by id desc
        limit #{start}, #{size}
    </select>

</mapper>