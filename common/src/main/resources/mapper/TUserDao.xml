<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bilibili.dao.UserDao">

    <resultMap type="bilibili.entity.User" id="TUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TUserMap">
        select
          id, phone, email, password, salt, createTime, updateTime
        from mock_bilibili.t_user
        where id = #{id}
    </select>

    <select id="queryUserByPhone" resultMap="TUserMap">
        select
          id, phone, email, password, salt, createTime, updateTime
        from mock_bilibili.t_user
        where phone = #{phone}
    </select>

    <select id="queryUserByEmail" resultMap="TUserMap">
        select
          id, phone, email, password, salt, createTime, updateTime
        from mock_bilibili.t_user
        where email = #{email}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TUserMap">
        select
          id, phone, email, password, salt, createTime, updateTime
        from mock_bilibili.t_user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TUserMap">
        select
          id, phone, email, password, salt, createTime, updateTime
        from mock_bilibili.t_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="salt != null and salt != ''">
                and salt = #{salt}
            </if>
            <if test="createtime != null">
                and createTime = #{createtime}
            </if>
            <if test="updatetime != null">
                and updateTime = #{updatetime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insertUser" keyProperty="id" useGeneratedKeys="true">
        insert into mock_bilibili.t_user(phone, email, password, salt, createTime, updateTime)
        values (#{phone}, #{email}, #{password}, #{salt}, #{createtime}, #{updatetime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update mock_bilibili.t_user
        <set>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
            <if test="createtime != null">
                createTime = #{createtime},
            </if>
            <if test="updatetime != null">
                updateTime = #{updatetime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from mock_bilibili.t_user where id = #{id}
    </delete>

</mapper>