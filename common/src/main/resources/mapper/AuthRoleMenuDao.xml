<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bilibili.dao.AuthRoleMenuDao">

    <resultMap type="bilibili.entity.auth.AuthRoleMenu" id="TAuthRoleMenuMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="roleId" column="roleId" jdbcType="INTEGER"/>
        <result property="menuId" column="menuId" jdbcType="INTEGER"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <association property="authMenu" javaType="bilibili.entity.auth.AuthMenu">
            <result property="code" column="code"/>
            <result property="name" column="name"/>
        </association>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TAuthRoleMenuMap">
        select
          id, roleId, menuId, createTime
        from mock_bilibili.t_auth_role_menu
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TAuthRoleMenuMap">
        select
          id, roleId, menuId, createTime
        from mock_bilibili.t_auth_role_menu
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TAuthRoleMenuMap">
        select
        id, roleId, menuId, createTime
        from mock_bilibili.t_auth_role_menu
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="roleId != null">
                and roleId = #{roleId}
            </if>
            <if test="menuId != null">
                and menuId = #{menuId}
            </if>
            <if test="createTime != null">
                and createTime = #{createTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into mock_bilibili.t_auth_role_menu(roleId, menuId, createTime)
        values (#{roleId}, #{menuId}, #{createTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update mock_bilibili.t_auth_role_menu
        <set>
            <if test="roleId != null">
                roleId = #{roleId},
            </if>
            <if test="menuId != null">
                menuId = #{menuId},
            </if>
            <if test="createTime != null">
                createTime = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from mock_bilibili.t_auth_role_menu where id = #{id}
    </delete>

    <select id="getAuthRoleMenus" resultMap="TAuthRoleMenuMap">
      select
      tare.id, tare.roleId, tare.createTime, tare.menuId, am.code, am.name
      from t_auth_role_menu tare
      left join t_auth_menu am
      on am.id = tare.menuId
      where tare.roleId in
      <foreach collection="roleIdSet" item="roleId" open="(" close=")" separator=",">
          #{roleId}
      </foreach>
    </select>

</mapper>